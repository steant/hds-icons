name: Sync Icons from Figma

on:
  push:
    paths:
      - scripts/figma-sync.js
      - .github/workflows/figma-sync.yml
      - package.json
      - package-lock.json
      - icons.json
      - icons/**
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run Figma sync
        run: npm run sync
        env:
          FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
          FILE_ID: ${{ secrets.FILE_ID }}

      - name: Create dist folder and versioned zip (keep latest 2)
        run: |
          mkdir -p dist
          VERSION=$(jq -r .version icons.json)
          ZIP_NAME="icons-v$VERSION.zip"
          zip -r "dist/$ZIP_NAME" icons

          # Keep only 2 latest
          ls -1t dist/icons-v*.zip | tail -n +3 | xargs -r rm
          echo "üì¶ Created dist/$ZIP_NAME and kept only latest 2 zips"

      - name: Commit and push icons and zip
        id: commit
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

          git add -A  # stage all changes including deletions

          echo "---- GIT STATUS BEFORE PULL ----"
          git status
          echo "--------------------------------"

          if git diff --cached --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "üü¢ No changes to commit"
          else
            git commit -m "Sync icons from Figma"

            git stash --include-untracked
            git pull --rebase origin main
            git stash pop || true

            git push
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Notify Slack
        if: steps.commit.outputs.changed == 'true'
        run: |
          VERSION=$(jq -r .version icons.json)
          COUNT=$(jq '.icons | length' icons.json)
          REPO_NAME=$(basename ${{ github.repository }})
          REPO_OWNER=$(dirname ${{ github.repository }})
          DOWNLOAD_URL="https://${REPO_OWNER}.github.io/${REPO_NAME}/dist/icons-v${VERSION}.zip"

          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"‚úÖ *Icons synced!*\nüì¶ Version: *v$VERSION*\nüî¢ Total icons: *$COUNT*\n‚¨áÔ∏è <${DOWNLOAD_URL}|Download icons-v${VERSION}.zip>\"
          }" ${{ secrets.SLACK_WEBHOOK }}

      - name: Cleanup node_modules and lock file
        if: always()
        run: |
          rm -rf node_modules package-lock.json
